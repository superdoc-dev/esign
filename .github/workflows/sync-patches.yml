name: Sync Patches to Main

on:
  push:
    branches: [stable, "*.x"]
    paths:
      - "src/**"
      - "!**.md"
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  sync-patch:
    runs-on: ubuntu-latest
    # Skip release and promotion commits
    if: |
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !contains(github.event.head_commit.message, 'chore(release)') &&
      !contains(github.event.head_commit.message, 'chore: promote')

    steps:
      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: Sync patch to main
        env:
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create sync branch
          BRANCH="sync-patch-$(date +%s)"
          git checkout -b "$BRANCH" origin/main

          # Cherry-pick the patch
          if git cherry-pick "${{ github.sha }}"; then
            git push origin "$BRANCH"
            
            # Create PR with auto-merge label
            gh pr create \
              --base main \
              --head "$BRANCH" \
              --title "sync: ${{ github.event.head_commit.message }}" \
              --body "Syncing patch from \`${{ github.ref_name }}\` to main
              
              **Commit**: ${{ github.sha }}
              **Author**: ${{ github.event.head_commit.author.name }}
              
              ---
              _Auto-generated PR to keep main in sync with production patches_" \
              --label "sync"
          fi
